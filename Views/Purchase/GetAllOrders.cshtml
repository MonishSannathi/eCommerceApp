@model List<Ecommerce.Models.Purchase.PurchaseOrderEntity>

@{
    ViewBag.Title = "GetAllOrders";
}

<h2>All Orders</h2>

<!--<p>
    @Html.ActionLink("Add a Purchase Order", "AddOrder")
</p>-->

@Html.AntiForgeryToken()

@if (Model == null || Model.Count == 0)
{
    <div class="alert alert-info" role="alert">
        There are currently no items.
    </div>
}



@if (Model != null && Model.Any())
{
    <table class="table">
        <tr>
            <th>
                Order Title
            </th>
            <th>
                File Name
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.OrderTitle)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OrderPdfPath)
                </td>
                <td style="display:flex;">
                   
                    @Html.ActionLink("EditOrder", "EditOrder", new { id = item.id }, new { @class = "me-2 btn btn-primary" }) |
                    @Html.ActionLink("ViewOrder", "ViewOrder", new { id = item.id }, new { @class = "ms-2 me-2 btn btn-primary" }) |

                    @using (Html.BeginForm("DeleteOrder", "Purchase", new { id = item.id}, FormMethod.Post))
                    {
                        @Html.HttpMethodOverride(HttpVerbs.Delete)
                        <button type="submit" class="ms-2 delete-button btn btn-danger ps-2">Delete</button>
                    }
                    @*<button class=".deletePurchaseOrder btn btn-primary" data-item="@Url.Action("DisplayPurchaseOrderPdf",new {id=item.id})" id="@item.id" onclick="deletePurchaseOrder(this)">DeleteOrder</button>*@
                </td>
            </tr>
        }

    </table>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/Purchase/GetAllOrders.js"></script>
}